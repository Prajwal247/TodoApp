{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const AuthProvider=_ref=>{let{children}=_ref;const[isAuthenticated,setIsAuthenticated]=useState(false);useEffect(()=>{const token=localStorage.getItem('authToken');if(token){setIsAuthenticated(true);}},[]);const login=token=>{setIsAuthenticated(true);localStorage.setItem('authToken',token);};const logout=()=>{setIsAuthenticated(false);localStorage.removeItem('authToken');};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{isAuthenticated,login,logout},children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","AuthContext","undefined","AuthProvider","_ref","children","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","login","setItem","logout","removeItem","Provider","value","useAuth","context","Error"],"sources":["/Users/prajwalthapa/Desktop/todoapp/frontend/src/Context/Auth.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\ninterface AuthContextType {\n  isAuthenticated: boolean;\n  login: (token:string) => void;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ninterface AuthProviderProps {\n  children: React.ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(() => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      setIsAuthenticated(true);\n    }\n  }, []);\n\n  const login = (token: string) => {\n    setIsAuthenticated(true);\n    localStorage.setItem('authToken', token); \n  };\n\n  const logout = () => {\n    setIsAuthenticated(false);\n    localStorage.removeItem('authToken');\n  };\n\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAQ9E,KAAM,CAAAC,WAAW,cAAGN,aAAa,CAA8BO,SAAS,CAAC,CAMzE,MAAO,MAAM,CAAAC,YAAyC,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACpE,KAAM,CAACE,eAAe,CAAEC,kBAAkB,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CAE7DC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAU,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAC/C,GAAIF,KAAK,CAAE,CACTD,kBAAkB,CAAC,IAAI,CAAC,CAC1B,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAI,KAAK,CAAIH,KAAa,EAAK,CAC/BD,kBAAkB,CAAC,IAAI,CAAC,CACxBE,YAAY,CAACG,OAAO,CAAC,WAAW,CAAEJ,KAAK,CAAC,CAC1C,CAAC,CAED,KAAM,CAAAK,MAAM,CAAGA,CAAA,GAAM,CACnBN,kBAAkB,CAAC,KAAK,CAAC,CACzBE,YAAY,CAACK,UAAU,CAAC,WAAW,CAAC,CACtC,CAAC,CAED,mBACEd,IAAA,CAACC,WAAW,CAACc,QAAQ,EAACC,KAAK,CAAE,CAAEV,eAAe,CAAEK,KAAK,CAAEE,MAAO,CAAE,CAAAR,QAAA,CAC7DA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAAY,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAGtB,UAAU,CAACK,WAAW,CAAC,CACvC,GAAI,CAACiB,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,6CAA6C,CAAC,CAChE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}